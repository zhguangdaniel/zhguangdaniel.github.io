<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Daniel.Zhang]]></title>
  <subtitle><![CDATA[Do for my dream !]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://zhguangdaniel.github.io/"/>
  <updated>2015-04-16T02:18:23.108Z</updated>
  <id>http://zhguangdaniel.github.io/</id>
  
  <author>
    <name><![CDATA[ZhangGuang(Daniel)]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Java系列笔记(1) - Java 类加载与初始化]]></title>
    <link href="http://zhguangdaniel.github.io/2015/04/16/java-1-classloader/"/>
    <id>http://zhguangdaniel.github.io/2015/04/16/java-1-classloader/</id>
    <published>2015-04-16T02:18:23.108Z</published>
    <updated>2015-04-16T02:18:23.108Z</updated>
    <content type="html"><![CDATA[<p>在了解Java的机制之前，需要先了解类在JVM（Java虚拟机）中是如何加载的，这对后面理解java其它机制将有重要作用。<br>每个类编译后产生一个Class对象，存储在.class文件中，JVM使用类加载器（Class Loader）来加载类的字节码文件（.class），类加载器实质上是一条类加载器链，一般的，我们只会用到一个原生的类加载器，它只加载Java API等可信类，通常只是在本地磁盘中加载，这些类一般就够我们使用了。如果我们需要从远程网络或数据库中下载.class字节码文件，那就需要我们来挂 载额外的类加载器。<br>一般来说，类加载器是按照树形的层次结构组织的，每个加载器都有一个父类加载器。另外，每个类加载器都支持代理模式，即可以自己完成Java类的加载工作，也可以代理给其它类加载器。<br>类加载器的加载顺序有两种，一种是父类优先策略，一种是是自己优先策略，父类优先策略是比较一般的情况（如JDK采用的就是这种方式），在这种策略 下，类在加载某个Java类之前，会尝试代理给其父类加载器，只有当父类加载器找不到时，才尝试自己去加载。自己优先的策略与父类优先相反，它会首先尝试 子经济加载，找不到的时候才要父类加载器去加载，这种在web容器（如tomcat）中比较常见。</p>
<a id="more"></a>
]]></content>
    <summary type="html">
    <![CDATA[<p>在了解Java的机制之前，需要先了解类在JVM（Java虚拟机）中是如何加载的，这对后面理解java其它机制将有重要作用。<br>每个类编译后产生一个Class对象，存储在.class文件中，JVM使用类加载器（Class Loader）来加载类的字节码文件（.class），类加载器实质上是一条类加载器链，一般的，我们只会用到一个原生的类加载器，它只加载Java API等可信类，通常只是在本地磁盘中加载，这些类一般就够我们使用了。如果我们需要从远程网络或数据库中下载.class字节码文件，那就需要我们来挂 载额外的类加载器。<br>一般来说，类加载器是按照树形的层次结构组织的，每个加载器都有一个父类加载器。另外，每个类加载器都支持代理模式，即可以自己完成Java类的加载工作，也可以代理给其它类加载器。<br>类加载器的加载顺序有两种，一种是父类优先策略，一种是是自己优先策略，父类优先策略是比较一般的情况（如JDK采用的就是这种方式），在这种策略 下，类在加载某个Java类之前，会尝试代理给其父类加载器，只有当父类加载器找不到时，才尝试自己去加载。自己优先的策略与父类优先相反，它会首先尝试 子经济加载，找不到的时候才要父类加载器去加载，这种在web容器（如tomcat）中比较常见。</p>]]>
    
    </summary>
    
      <category term="Java" scheme="http://zhguangdaniel.github.io/tags/Java/"/>
    
      <category term="Java" scheme="http://zhguangdaniel.github.io/categories/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Java系列笔记(0) - 目录和概述]]></title>
    <link href="http://zhguangdaniel.github.io/2015/04/15/java-0-intro/"/>
    <id>http://zhguangdaniel.github.io/2015/04/15/java-0-intro/</id>
    <published>2015-04-15T04:00:00.000Z</published>
    <updated>2015-04-15T04:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>本文于2015年2月27日发表于<a href="http://www.cnblogs.com/zhguang/p/4303816.html" target="_blank" rel="external">博客园</a>，后迁入github，后面以本页为准。</p>
<h2 id="前言">前言</h2><p>笔者在开发过程中发现自己基础太薄弱，读书时除了系统学习了一下Java的基础语法和用法、一点简单的数据结构和设计模式之外，再无深入系统的学习，而工作中的学习也是东晃一枪西晃一枪，不够扎实和系统。想到一个学习方法：学到的东西能够系统的表达出来，才说明你学到手了；于是，笔者决定边学边写，将学到的东西以博客的形式表达出来。技术在于积累，在于总结，在于表达，在于分享，这4点都做到了，一个技术才是我们自己的。</p>
<p>本文档会因学习的深入或错误的订正而持续更新，不过由于本人工作较忙（屌丝程序员，加班多，没有钱，你懂得），所以更新会比较慢，不过一定会坚持写完。</p>
<p>《Java系列笔记》是本人对Java的应用和学习过程中的笔记，按知识点分章节，写这一系列笔记的目的是学习，由于笔者是边学编写的，水平有限，文中必定有疏漏之处，欢迎斧正。</p>
<p>本Java系列笔记，目前一共计划写12篇，在这个系列中，侧重于Java技术的原理和深入理解，相对之下，代码和实例较少，不过需要实例的地方，都给出 了网上相关的实例。本系列文章的主要来源是我自己的积累、自己的理解、看的书、以及网上的资料。</p>
<p>文中多有参考前辈的书籍和博客之处，原则上不会原文引用，而是加入自己的理解改造之，如果有引用，尽量会注明出处，如有疏漏或疑问，请联系：daniel.zhguang@gmail.com</p>
<h2 id="目录">目录</h2><p>下面是本文计划中的目录：</p>
<p><a href="#">Java系列笔记(1) - Java 类加载与初始化</a></p>
<p><a href="#">Java系列笔记(2) - Java RTTI和反射机制</a></p>
<p><a href="#">Java系列笔记(3) - Java 内存区域和GC机制</a></p>
<p><a href="#">Java系列笔记(4) - JVM监控与调优</a></p>
<p><a href="#">Java系列笔记(5) - 线程</a></p>
<p>Java系列笔记(6) - 并发</p>
<p>Java系列笔记(7) - 内部类</p>
<p>Java系列笔记(8) - 注解和泛型</p>
<p>Java系列笔记(9) - 枚举</p>
<p>Java系列笔记(10) - 集合类</p>
<p>Java系列笔记(11) - NIO</p>
<p>Java系列笔记(12) - IO</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>本文于2015年2月27日发表于<a href="http://www.cnblogs.com/zhguang/p/4303816.html" target="_blank" rel="external">博客园</a>，后迁入github，后面以本页为准。</p>
<h2]]>
    </summary>
    
      <category term="Java" scheme="http://zhguangdaniel.github.io/tags/Java/"/>
    
      <category term="Java" scheme="http://zhguangdaniel.github.io/categories/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://zhguangdaniel.github.io/2015/04/14/hello-world/"/>
    <id>http://zhguangdaniel.github.io/2015/04/14/hello-world/</id>
    <published>2015-04-14T04:00:00.000Z</published>
    <updated>2015-04-14T04:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>我的博客开张了，该博客主要用于分享Java、分布式、Server端、架构、管理、生活等方面的内容，开张大吉！<br>欢迎光临我的博客，点击<a href="http://zhguangdaniel.github.io/about/" target="_blank" rel="external">这里</a>查看自我介绍吧！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>我的博客开张了，该博客主要用于分享Java、分布式、Server端、架构、管理、生活等方面的内容，开张大吉！<br>欢迎光临我的博客，点击<a href="http://zhguangdaniel.github.io/about/" target="_blank" rel=]]>
    </summary>
    
  </entry>
  
</feed>